version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.1.3
  terraform: circleci/terraform@3.2.1
  snyk: snyk/snyk@2.1.0

# Pipeline parameters
parameters:
  run_prod_job:
    type: boolean
    default: false

  deploy-env:
    type: enum
    enum: ["security", "production", "development"]
    default: "development"

# executors:
#   ubuntu:
#     machine:
#       image: ubuntu-2204:current

# Executors
executors:
  terraform-executor:
    docker:
      - image: cimg/python:3.8  # Python image as an example, change as needed
    environment:
      AWS_DEFAULT_REGION: 'us-east-1'  # Example, change as needed

# Commands
commands:
  install-dependencies:
    description: "Install Python dependencies"
    steps:
      - run: pip install -r requirements.txt
  check-modified:
    parameters:
      path:
        type: string
    steps:
      - run:
          name: Check if << parameters.path >> has changes
          command: |
            if git diff --name-only $CIRCLE_PREVIOUS_COMMIT..$CIRCLE_SHA1 | grep -q << parameters.path >>; then
              echo 'export MODIFIED=true' >> $BASH_ENV
            else
              echo 'export MODIFIED=false' >> $BASH_ENV
            fi

jobs:
  deploy-to-sec:
    executor: terraform-executor
    steps:
      - checkout
      - check-modified:
          path: sec
      - run:
          name: Deploy to SEC if modified
          command: |
            echo $MODIFIED  
            echo $CIRCLE_PREVIOUS_COMMIT
            echo $CIRCLE_SHA1
            echo $CIRCLE_PREVIOUS_COMMIT..$CIRCLE_SHA1
            if [ "$MODIFIED" == "true" ]; then
              echo 'Deploying to SEC...'
              - aws-cli/setup:
                    role_arn: 'arn:aws:iam::357225030460:role/circleci-role'
                    region: "us-east-1"
                    # optional parameters
                    profile_name: "CCI"
                    role_session_name: "CCI"
                    session_duration: '3000'          
              cd sec
              terraform init
              terraform apply -auto-approve
            else
              echo 'No changes in SEC folder. Skipping deployment.'
            fi
  # Repeat similar blocks for 'dev' and 'prod'
# deploy-to-prod:
#     executor: terraform-executor
#     steps:
#       - checkout
#       - check-modified:
#           path: prod
#       - run:
#           name: Deploy to PROD if modified
#           command: |
#             if [ "$MODIFIED" == "true" ]; then
#               echo 'Deploying to PROD...'
#               - aws-cli/setup:
            #         role_arn: 'arn:aws:iam::357225030460:role/circleci-role'
            #         region: "us-east-1"
            #         # optional parameters
            #         profile_name: "CCI"
            #         role_session_name: "CCI"
            #         session_duration: '3000'          
            #   cd sec
            #   terraform init
            #   terraform apply -auto-approve
            # else
            #   echo 'No changes in SEC folder. Skipping deployment.'
            # fi
  # Repeat similar blocks for 'dev' and 'prod'
  deploy-to-dev:
      executor: terraform-executor
      steps:
        - checkout
        - check-modified:
            path: dev
        - run:
            name: Deploy to DEV if modified
            command: |
              echo $MODIFIED
              echo $CIRCLE_PREVIOUS_COMMIT
              echo $CIRCLE_SHA1
              if [ "$MODIFIED" == "true" ]; then
                echo 'Deploying to DEV...'
                - aws-cli/setup:
                      role_arn: 'arn:aws:iam::863980140052:role/circleci-role'
                      region: "us-east-1"
                      # optional parameters
                      profile_name: "CCI"
                      role_session_name: "CCI"
                      session_duration: '3000'          
                cd dev
                terraform init
                terraform apply -auto-approve
              else
                echo 'No changes in DEV folder. Skipping deployment.'
              fi
  # Repeat similar blocks for 'dev' and 'prod'

workflows:
  build_and_deploy:
    jobs:
      - deploy-to-sec
      - deploy-to-dev
      # - deploy-to-prod
